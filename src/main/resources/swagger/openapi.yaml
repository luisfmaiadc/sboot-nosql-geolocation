openapi: 3.0.3
info:
  title: API de Geolocalização
  version: 1.0.0
  description: Sistema de Geolocalização.

servers:
  - url: http://localhost:8080

paths:
  /v1/findLocation:
    get:
      summary: Pesquisa de logradouros por CEP.
      operationId: searchPlaceByCep
      tags:
        - Search
      parameters:
        - in: query
          name: cep
          schema:
            type: string
            pattern: '^[0-9]{8}$'
          required: true
      responses:
        '200':
          description: Local encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPlaceResponse'
        '400':
          description: CEP inválido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Erro na requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'

  /v1/location:
    get:
      summary: Pesquisa de locais cadastrados por nome.
      operationId: searchPlaceByName
      tags:
        - Search
      parameters:
        - in: query
          name: nome
          schema:
            type: string
            minLength: 2
            maxLength: 50
          required: true
      responses:
        '200':
          description: Local encontrado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceResponse'
        '400':
          description: Erro ao buscar local.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Erro na requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'

    post:
      summary: Cadastrar um novo local.
      operationId: insertNewPlace
      tags:
        - Insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlaceRequest'
      responses:
        '201':
          description: Local registrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
        '400':
          description: Payload inválido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '500':
          description: Erro na requisição.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'


components:
  schemas:
    PlaceResponse:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        complemento:
          type: string
        cep:
          type: string
        rua:
          type: string
        numero:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        geolocalizacao:
          type: object
          properties:
            latitude:
              type: string
            longitude:
              type: string
        avaliacao:
          type: number
          format: double

    SearchPlaceResponse:
      type: object
      properties:
        cep:
          type: string
        rua:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        geolocalizacao:
          type: object
          properties:
            latitude:
              type: number
              format: double
            longitude:
              type: number
              format: double

    NewPlaceRequest:
      type: object
      properties:
        cep:
          type: string
          pattern: '^[0-9]{8}$'
        nome:
          type: string
          minLength : 2
          maxLength: 50
        complemento:
          type: string
          nullable: true
        numero:
          type: string
          minLength: 1
          maxLength: 7
        avaliacao:
          type: number
          format: double
          minimum: 0
          maximum: 5
      required:
        - cep
        - nome
        - numero
        - avaliacao

    StandardError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
      required:
        - timestamp
        - status
        - error